name: Continuous Integration
concurrency: ci

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: discord_api
    env:
      DISCORD_BOT_TOKEN: "${{ secrets.DISCORD_BOT_TOKEN }}"
      TEST_CHANNEL_ID: "${{ secrets.TEST_CHANNEL_ID }}"
      SCRAPE_URL: http://localhost:8090
      FETCH_INTERVAL: 1000
      API_ENDPOINT: 3050

    outputs:
      version: ${{ steps.output_version.outputs.version }}

    steps:
      - name: Create version
        run: echo "VERSION=$(date -u +%Y%m%d_%H%M%S_%N)" >> $GITHUB_ENV
      - name: Output version
        id: output_version
        run: echo "::set-output name=version::$VERSION"
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: npm ci
      - run: npm run build

      - run: npm start & npx wait-on -t 60000 http://localhost:${{ env.API_ENDPOINT }}/health
      - run: npm test

      - run: mkdir build-zip
      - name: Generate deployment package
        run: zip -r build-zip/$VERSION.zip dist node_modules package.json appspec.yml scripts

      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.output_version.outputs.version }}
          path: build-zip

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{needs.build.outputs.version}}
      
      - run: mkdir deploy-package
      - name: Unzip
        run: unzip -d deploy-package ${{needs.build.outputs.version}}.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: eu-north-1

      - name: Push to S3
        run: |
          aws deploy push \
            --application-name gerald-deploy \
            --ignore-hidden-files \
            --s3-location s3://gerald-deploy/${{needs.build.outputs.version}}.zip \
            --source deploy-package

      - name: Deploy Revision
        run: |
          aws deploy create-deployment \
            --application-name gerald-deploy \
            --deployment-group-name gerald-deployment-group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --s3-location bucket=gerald-deploy,key=${{needs.build.outputs.version}}.zip,bundleType=zip
