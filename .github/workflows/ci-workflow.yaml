name: Continuous Integration

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.output_version.outputs.version }}

    steps:
    - name: Create version
      run: echo "::set-env name=VERSION::$(date -u +%Y%m%d_%H%M%S_%N)" 
    - name: Output version 
      id: output_version
      run: echo "::set-output name=version::$VERSION"
    - uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm ci
    - run: npm run build

    - run: mkdir build-zip
    - name: Generate deployment package
      run: zip -r build-zip/$VERSION.zip * -x src/\* build-zip/\*
    
    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: build
        path: build-zip

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm ci
    - run: npm test

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: build
        path: build-zip

    - name: Fetch Discord bot token
      run: 'echo "DISCORD_BOT_TOKEN = $DISCORD_BOT_TOKEN" > .env'
      shell: bash
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
    - name: Add Discord bit token
      run: echo 'zip -ur build-zip/${{needs.build.outputs.version}}.zip .env'
    
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_ACCESS_SECRET }}
        application_name: gerald-the-discord-bot
        environment_name: gerald-the-discord-bot-env
        version_label: ${{needs.build.outputs.version}}
        version_description: ${{github.SHA}}
        region: eu-north-1
        deployment_package: build-zip/${{needs.build.outputs.version}}.zip
